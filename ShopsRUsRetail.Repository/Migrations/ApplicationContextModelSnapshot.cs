// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;


namespace ShopsRUsRetail.Repository.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("ShopsRUs.Entities.DiscountType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsRatePercentage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(19, 2)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DiscountType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsRatePercentage = true,
                            Name = "Affiliate Discount",
                            Rate = 10m,
                            Type = "Affiliate"
                        },
                        new
                        {
                            Id = 2,
                            IsRatePercentage = true,
                            Name = "Employee Discount",
                            Rate = 30m,
                            Type = "Employee"
                        },
                        new
                        {
                            Id = 3,
                            IsRatePercentage = true,
                            Name = "Loyal Customer Discount",
                            Rate = 5m,
                            Type = "Customer"
                        },
                        new
                        {
                            Id = 4,
                            IsRatePercentage = false,
                            Name = "Price Discount",
                            Rate = 5m,
                            Type = "Price"
                        });
                });

            modelBuilder.Entity("ShopsRUs.Entities.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal(19, 2)");

                    b.Property<string>("InvoiceNumber")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.Property<int>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PayableAmount")
                        .HasColumnType("decimal(19, 2)");

                    b.Property<int>("StoreTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(19, 2)");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("InvoiceId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("ShopsRUs.Entities.InvoiceDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("ProductCost")
                        .HasColumnType("decimal(19, 2)");

                    b.Property<decimal>("ProductDiscountPrice")
                        .HasColumnType("decimal(19, 2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ProductPayableCost")
                        .HasColumnType("decimal(19, 2)");

                    b.Property<decimal>("ProductPrice")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductQuantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.ToTable("InvoiceDetails");
                });

            modelBuilder.Entity("ShopsRUs.Entities.StoreType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IsPercantageDiscount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("StoreType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsPercantageDiscount = 0,
                            Name = "GROCERY"
                        },
                        new
                        {
                            Id = 2,
                            IsPercantageDiscount = 1,
                            Name = "OTHER"
                        });
                });

            modelBuilder.Entity("ShopsRUs.Entities.Users", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("TEXT");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            DateCreated = new DateTime(2019, 10, 23, 18, 7, 31, 572, DateTimeKind.Local).AddTicks(8035),
                            Email = "user1@email.com",
                            FirstName = "ozge",
                            LastName = "cavus",
                            MiddleName = "aksu",
                            PhoneNumber = "123456789",
                            UserType = "Customer"
                        },
                        new
                        {
                            UserId = 2,
                            DateCreated = new DateTime(2021, 10, 23, 18, 7, 31, 572, DateTimeKind.Local).AddTicks(8131),
                            Email = "user2@email.com",
                            FirstName = "simge",
                            LastName = "aksu",
                            MiddleName = "-",
                            PhoneNumber = "123456789",
                            UserType = "Affiliate"
                        },
                        new
                        {
                            UserId = 3,
                            DateCreated = new DateTime(2017, 10, 23, 18, 7, 31, 572, DateTimeKind.Local).AddTicks(8138),
                            Email = "user3@email.com",
                            FirstName = "Ahmet",
                            LastName = "Cavus",
                            PhoneNumber = "123456789",
                            UserType = "Employee"
                        });
                });

            modelBuilder.Entity("ShopsRUs.Entities.InvoiceDetails", b =>
                {
                    b.HasOne("ShopsRUs.Entities.Invoice", null)
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ShopsRUs.Entities.Invoice", b =>
                {
                    b.Navigation("InvoiceDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
